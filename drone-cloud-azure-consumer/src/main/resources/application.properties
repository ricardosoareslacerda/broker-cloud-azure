# Kafka Server properties
#spring.kafka.bootstrap-servers=${HOST_KAFKA_DOCKER_INTERNAL:127.0.0.1}:29092
#spring.kafka.bootstrap.servers=drone-namespace.servicebus.windows.net:9093
#spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="Endpoint=sb://drone-namespace.servicebus.windows.net/;SharedAccessKeyName=namespace-broker-drone-cloud;SharedAccessKey=Qq5ewwa89lk2I/Ixgr2n+nF/fyIognX3QCA60J48Q2o=;EntityPath=drone_topic";
#spring.kafka.properties.sasl.mechanism=PLAIN
#spring.kafka.properties.security.protocol=SASL_SSL

# Consumer Properties
#spring.kafka.consumer.bootstrap-servers=${HOST_KAFKA_DOCKER_INTERNAL:127.0.0.1}:29092
spring.kafka.consumer.bootstrap-servers=drone-namespace.servicebus.windows.net:9093
spring.kafka.security.protocol=SASL_SSL
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username="$ConnectionString" password="Endpoint=sb://drone-namespace.servicebus.windows.net/;SharedAccessKeyName=authorization-drone-namespace;SharedAccessKey=3maslymZqSpRWRwX7PMp3WmXwMZRYhe6quBF9g0BPTM=;EntityPath=drone-topic";
spring.kafka.properties.sasl.mechanism=PLAIN

spring.kafka.consumer.group-id=${KAFKA_GROUP:drone-namespace}
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

group.name.consumer=${KAFKA_GROUP:drone-namespace}
topic.name.consumer=${KAFKA_TOPIC:drone-topic}

# Common Kafka Properties
auto.create.topics.enable=true

# Mail Server
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${CONFIG_GMAIL_USERNAME:ricardosoareslacerda@gmail.com}
spring.mail.password=${CONFIG_GMAIL_APP_PASSWORD:rnykvstneawdhdnh}

# Mail Server Connections Properties, ConnectTLS, port 587
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.transport.protocol=smtp
spring.mail.debug=false

# Mail Sender Properties
mail.sender.fromAddress=${MAIL_ADDRESS_FROM:ricardosoareslacerda@gmail.com}
mail.sender.toAddresses=${MAIL_ADDRESS_TO:ricardosoareslacerda+services@gmail.com}
mail.sender.subject=Drone Alert Information - Drone Falling

# MongoDB
#spring.data.mongodb.host=${MONGODB_HOST:127.0.0.1}
spring.data.mongodb.host=mongo-dronedb.brazilsouth.azurecontainer.io
spring.data.mongodb.port=${MONGODB_PORT:27017}
spring.data.mongodb.authentication-database=${MONGODB_AUTH_DATABASE:admin}
spring.data.mongodb.database=${MONGODB_DATABASE:dronedb}
spring.data.mongodb.username=${MONGODB_USERNAME:root}
spring.data.mongodb.password=${MONGODB_PASSWORD:MongoDB2022!}

# Environment Variable DockerFile
# ENV -> HOST_KAFKA_DOCKER_INTERNAL=host.docker.internal
# host.docker.internal (host internal docker )
# 127.0.0.1 (host not compile in docker) (without docker)
# KAFKA_GROUP -> drone_group
# KAFKA_TOPIC -> drone_topic
# ${HOST_MONGO_DOCKER_INTERNAL:127.0.0.1}
# ${PORT_MONGO_DOCKER_INTERNAL:27017}